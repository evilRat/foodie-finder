# FoodieFinder 站点配置

# HTTP 重定向到 HTTPS
server {
    listen 80;
    server_name api.foodiefinder.com www.foodiefinder.com;
    
    # Let's Encrypt 验证
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # 重定向到 HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS 主站点
server {
    listen 443 ssl http2;
    server_name api.foodiefinder.com;
    
    # SSL 配置
    ssl_certificate /etc/nginx/ssl/foodiefinder.crt;
    ssl_certificate_key /etc/nginx/ssl/foodiefinder.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    
    # 现代 SSL 配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=63072000" always;
    
    # API 路由
    location /api/ {
        # 限流
        limit_req zone=api burst=20 nodelay;
        
        # 代理配置
        proxy_pass http://foodiefinder_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 超时配置
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 缓冲配置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # 文件上传路由
    location /api/upload {
        # 上传限流
        limit_req zone=upload burst=5 nodelay;
        
        # 增加上传超时
        proxy_pass http://foodiefinder_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 上传超时配置
        proxy_connect_timeout 30s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # 禁用缓冲以支持大文件上传
        proxy_buffering off;
        proxy_request_buffering off;
    }
    
    # 静态文件服务
    location /uploads/ {
        alias /var/www/uploads/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        
        # 安全配置
        location ~* \.(php|jsp|asp|sh|pl)$ {
            deny all;
        }
    }
    
    # 健康检查
    location /health {
        proxy_pass http://foodiefinder_backend;
        access_log off;
    }
    
    # 禁止访问敏感文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(env|config|log)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# CDN 子域名配置
server {
    listen 443 ssl http2;
    server_name cdn.foodiefinder.com;
    
    # SSL 配置（使用通配符证书或单独证书）
    ssl_certificate /etc/nginx/ssl/foodiefinder.crt;
    ssl_certificate_key /etc/nginx/ssl/foodiefinder.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    
    # 静态资源服务
    location / {
        root /var/www/static;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        
        # Gzip 压缩
        gzip_static on;
        
        # 安全配置
        location ~* \.(php|jsp|asp|sh|pl)$ {
            deny all;
        }
    }
    
    # 图片处理（如果使用图片处理服务）
    location /images/ {
        alias /var/www/uploads/images/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # 图片格式转换（需要安装 nginx-module-image-filter）
        # image_filter resize 800 600;
        # image_filter_jpeg_quality 85;
    }
}