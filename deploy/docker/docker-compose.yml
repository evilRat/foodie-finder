# FoodieFinder Docker Compose 配置
version: '3.8'

services:
  # 应用服务
  app:
    build:
      context: ../../
      dockerfile: deploy/docker/Dockerfile
    container_name: foodiefinder-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    env_file:
      - ../../.env.production
    volumes:
      - app-logs:/var/log/foodiefinder
      - app-uploads:/app/uploads
    depends_on:
      - mongodb
      - redis
    networks:
      - foodiefinder-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB 数据库
  mongodb:
    image: mongo:6.0
    container_name: foodiefinder-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    volumes:
      - mongodb-data:/data/db
      - mongodb-config:/data/configdb
      - ./mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - foodiefinder-network
    command: mongod --auth

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: foodiefinder-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    networks:
      - foodiefinder-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: foodiefinder-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - app-uploads:/var/www/uploads:ro
    depends_on:
      - app
    networks:
      - foodiefinder-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 日志收集（可选）
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.8.0
    container_name: foodiefinder-filebeat
    restart: unless-stopped
    user: root
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - app-logs:/var/log/foodiefinder:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - foodiefinder-network
    depends_on:
      - app
    profiles:
      - logging

# 数据卷
volumes:
  mongodb-data:
    driver: local
  mongodb-config:
    driver: local
  redis-data:
    driver: local
  app-logs:
    driver: local
  app-uploads:
    driver: local

# 网络
networks:
  foodiefinder-network:
    driver: bridge